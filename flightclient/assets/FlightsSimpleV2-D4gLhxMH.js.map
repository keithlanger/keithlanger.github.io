{"version":3,"file":"FlightsSimpleV2-D4gLhxMH.js","sources":["../../src/utility/simplev2/FlightMethods.js","../../src/components/simpleV2/FlightDetail.js","../../src/components/simpleV2/FlightModal2.js","../../src/components/FlightsSimpleV2.js"],"sourcesContent":["import moment from \"moment\";\r\n\r\nfunction FlightMethods(){\r\n      const imageBaseUrl = \"https://abc.dev.cloudids.aero/images/\";\r\n\r\n     function formatTime(value, timeFormat){\r\n        if (!timeFormat) timeFormat = \"h:mm A\";\r\n        var result = moment(value).format(timeFormat);\r\n        return result;\r\n      }\r\n    \r\n      function getLookup(flight, fields, field, valueType, language){\r\n            if (!valueType) valueType = \"default\";\r\n            if (!language) language = \"en\";\r\n            var dailyValue = getDailyValue(flight, field);\r\n            var key = `${field}/${dailyValue}/${language}/${valueType}`.toLowerCase();\r\n            var result = fields[key]?.value ?? dailyValue;\r\n            return result;\r\n    \r\n      }\r\n    \r\n      // function getDailyValue(flight, field) {\r\n      //   //var result = flight?.fields?.[field]?.[0]?.value;\r\n      //   var result = flight.dailyValues?.find(dv => dv.field == field && dv.instance == 1)?.value;\r\n      //   return result ? result : \"\";\r\n      // }\r\n\r\n      function getDailyValue(flight, field) {\r\n        var result = flight?.fields?.[field]?.[0]?.value;\r\n        return result;\r\n      }\r\n    \r\n      // function getCodeshareField(flight, field) {\r\n      //   // var result = flight?.fieldGroups?.codeshares?.[0]?.[field]?.value;\r\n      //   // if (!result)\r\n      //   var result = getDailyValue(flight, field);\r\n      //   return result;\r\n      // }\r\n\r\n      function getCodeshareField(flight, field) {\r\n        var result = flight?.fieldGroups?.codeshares?.[0]?.[field]?.value;\r\n        if (!result)\r\n          result = getDailyValue(flight, field);\r\n        return result;\r\n      }\r\n    \r\n      function getFormattedFlight(flight, fields){\r\n          var result = {\r\n              id: flight.id, \r\n              adi: flight?.adi,\r\n              schedule: formatTime(flight?.schedule),\r\n              iata: getDailyValue(flight, \"city\"),\r\n              city: getLookup(flight, fields, \"city\"),\r\n              logo: imageBaseUrl + getCodeshareField(flight, \"logo\"),\r\n              linecode: getCodeshareField(flight, \"linecode\"),\r\n              number: getCodeshareField(flight, \"number\"),\r\n              gate: getDailyValue(flight, \"gate\"),\r\n              status: getLookup(flight, fields, \"status\"),\r\n              statusCode: getDailyValue(flight, \"status\"),\r\n              linecodeNumber: getCodeshareField(flight, \"linecode\") + \" \" + getCodeshareField(flight, \"number\")\r\n          };\r\n          return result;\r\n      } \r\n\r\n      return {getFormattedFlight, formatTime, getLookup, getDailyValue, getCodeshareField};\r\n}\r\n\r\nexport default new FlightMethods();\r\n\r\n","import Card from 'react-bootstrap/Card';\r\nimport { Stack } from 'react-bootstrap';\r\nimport '../SomeCard.scss';\r\nimport FlightMethods from '../../utility/simplev2/FlightMethods';\r\n\r\nfunction FlightDetail({flight, showFlight, fields}) {\r\n\r\n\r\nvar formattedFlight = FlightMethods.getFormattedFlight(flight, fields);\r\n\r\n\r\n  return (\r\n    <Card className=\"myCard\" onClick={() => showFlight(flight)}>\r\n      <Card.Body>\r\n        <Card.Title>{flight.id} ({flight.adi}) {formattedFlight.linecode}{formattedFlight.number}</Card.Title>\r\n        <Stack>\r\n            <img src={formattedFlight.logo} />\r\n            <div>{formattedFlight.iata}</div>\r\n            <div>{formattedFlight.city}</div>\r\n            <div>{formattedFlight.gate}</div>\r\n            <div>{formattedFlight.status}</div>\r\n            <div>{formattedFlight.schedule}</div>\r\n        </Stack>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default FlightDetail;","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { Stack } from 'react-bootstrap';\r\nimport FlightMethods from '../../utility/simplev2/FlightMethods';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { useEffect, useState } from 'react';\r\n//import { authToken } from '../../utility/Constants';\r\nimport { toast } from 'react-toastify';\r\n\r\n//This version uses form submit and grabs the variables.  It's a bit simpler, since it doesn't use effects or state\r\n\r\nfunction FlightModal({flight: flight, fields: fields, show, handleClose}) {\r\n\r\n    const  dailiesBaseUrl = \"https://localhost:5001/v2/api/Dailies\";\r\n    const formattedFlight = FlightMethods.getFormattedFlight(flight, fields);\r\n\r\n    const updateFlight = (id, dailyValues) => {\r\n        console.log(\"Updating flight \" + id);\r\n        const url = dailiesBaseUrl + '/UpdateDailyValues/' + id;\r\n        const numRecords = 10;\r\n        fetch(url, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json' // Include if sending JSON data\r\n            // Add other headers as needed\r\n          },\r\n          body: JSON.stringify(dailyValues)\r\n        })\r\n        .then(response => {\r\n            if (!response.ok) {\r\n              throw new Error(`HTTP error! Status: ${response.status}`);\r\n            }\r\n            return response.json();\r\n          })\r\n          .then(data => {\r\n            console.log('Updating flight succeeded - Data:', data);\r\n            // Handle the data\r\n            handleClose();\r\n            toast.success(\"Record was saved successfully\");\r\n          })\r\n          .catch(error => {\r\n            console.error('Error Updating flight:', error);\r\n            toast.error(\"Record did not save successfully.  Error reported: \" + error);\r\n            // Handle errors\r\n          });\r\n    }\r\n\r\n    function getLinecodeNumber() {\r\n        const result = FlightMethods.getCodeshareField(flight, \"linecode\") + \" \" + FlightMethods.getCodeshareField(flight, \"number\");\r\n        return result;\r\n    }\r\n\r\n    function setField(name, value, updatedFields) {\r\n\r\n        var dailyValue = {field: name, instance: 1, value: value};\r\n        updatedFields.push(dailyValue);\r\n\r\n        flight.fields[name] = [{ instance: 1, value: value }];\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault(); // Prevent default browser refresh\r\n\r\n            console.log(\"Submit\");\r\n            console.log(event.target); \r\n\r\n            const updatedFields = [];\r\n            setField(\"gate\", event.target.gate.value, updatedFields);\r\n            setField(\"city\", event.target.city.value, updatedFields);\r\n            setField(\"status\", event.target.status.value, updatedFields);\r\n\r\n            // for (let i = 0; i < updatedFields.length; i++){\r\n            //     const dv = updatedFields[i];\r\n            //     if (!flight.dailyValues) flight.dailyValues = [];\r\n            //     const refDv = flight.dailyValues.find(x => x.field == dv.field && x.instance == dv.instance);\r\n            //     if (refDv)\r\n            //         refDv.value = dv.value;\r\n            //     else {\r\n            //         flight.dailyValues.push(dv);\r\n            //     }\r\n            // }\r\n\r\n            // var newFlight = {id: flight.id, fields: updatedFields};\r\n            console.log(\"Updating flight \" + flight.id);\r\n            console.log(updatedFields);\r\n            updateFlight(flight.id, updatedFields);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{getLinecodeNumber()}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group className=\"mb-3\" controlId=\"id\">\r\n                            <Form.Label>ID</Form.Label>\r\n                            <Form.Control type=\"text\" disabled={true} value={flight.id} />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\" controlId=\"linecode_number\">\r\n                            <Form.Label>Flight</Form.Label>\r\n                             <Form.Control type=\"text\" disabled={true} defaultValue={formattedFlight.linecodeNumber} />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\" controlId=\"gate\">\r\n                            <Form.Label>Gate</Form.Label>\r\n                            <Form.Control type=\"text\"  defaultValue={formattedFlight.gate} />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\" controlId=\"city\">\r\n                            <Form.Label>City</Form.Label>\r\n                            <Form.Control type=\"text\"  defaultValue={formattedFlight.iata} />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\" controlId=\"status\">\r\n                            <Form.Label>Status</Form.Label>\r\n                            <Form.Control type=\"text\"  defaultValue={formattedFlight.statusCode} />\r\n                        </Form.Group>\r\n                        <Button type=\"submit\" variant=\"primary\">\r\n                            Save Changes\r\n                        </Button>  \r\n                        <span className=\"p-2\" />                  \r\n                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Cancel\r\n                        </Button>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n\r\n                </Modal.Footer>\r\n            </Modal>\r\n    );\r\n}\r\n\r\nexport default FlightModal;","import Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport FlightDetail from './simpleV2/FlightDetail';\r\nimport { useState, useEffect } from 'react';\r\nimport FlightModal from './simpleV2/FlightModal2';\r\nimport Pagination from 'react-bootstrap/Pagination';\r\n//import { authToken } from '../utility/Constants';\r\n// //generated from https://www.mockaroo.com/14dc7090\r\n// const names = require(\"../data/names3.json\");\r\n\r\nimport fields from \"../data/fields.json\";\r\nimport flightsFromFile from \"../data/flights.json\";\r\n\r\nconst baseApiUrl = import.meta.env.VITE_API_BASE_URL;\r\n//const  dailiesBaseUrl = \"https://localhost:5001/v2/api/Dailies\";\r\nconst dailiesBaseUrl = `${baseApiUrl}/v2/api/Dailies`;\r\nconsole.log(\"dailiesBaseUrl: \" + dailiesBaseUrl);\r\n\r\nconst rollOn = 600;\r\nconst rollOff = -30;\r\n\r\n\r\n\r\nfunction addMinutes(date, minutes) {\r\n    return new Date(date.getTime() + minutes*60000);\r\n}\r\n\r\nfunction FlightsSimpleV2() {\r\n    console.log(\"Using simple APIs V2\");\r\n    const [show, setShow] = useState(false);\r\n    const [modalFlight, setModalFlight] = useState({});\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    //use flightsFromFile here if you want to work offline\r\n    //const [flights, setFlights] = useState(flightsFromFile);\r\n    const [flights, setFlights] = useState([]);\r\n\r\n    let itemsPerPage = 50;\r\n    let start = (currentPage - 1) * itemsPerPage;\r\n    //let currentNames = names.slice(start, start + itemsPerPage);\r\n    //let numPages = flights.length === 0 ? 1 : Math.floor((names.length - 1) / itemsPerPage) + 1;\r\n    let numPages = 1;\r\n\r\n    const getRecords = () => {\r\n        console.log(\"Fetching data\");\r\n        const url = `${dailiesBaseUrl}/GetFlightsByTimeRange?rollOn=${rollOn}&rollOff=${rollOff}&maxRecords=${itemsPerPage}`;\r\n        console.log(\"Fetching URL: \" + url);\r\n        fetch(url, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json' // Include if sending JSON data\r\n            // Add other headers as needed\r\n          }\r\n        })\r\n        .then(response => {\r\n            if (!response.ok) {\r\n              throw new Error(`HTTP error! Status: ${response.status}`);\r\n            }\r\n            return response.json();\r\n          })\r\n          .then(data => {\r\n            console.log('Data:', data);\r\n            // Handle the data\r\n            //setRows(data);\r\n            setFlights(data);\r\n          })\r\n          .catch(error => {\r\n            console.error('Error fetching data:', error);\r\n            // Handle errors\r\n          });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getRecords();\r\n\r\n      }, []\r\n    );\r\n\r\n    const handleClose = () => setShow(false);\r\n\r\n\r\n    function ShowFlight(flight){\r\n      setModalFlight(flight);\r\n      setShow(true);\r\n    }\r\n\r\n\r\n    function setPage(page){\r\n        if (page >=1 && page <= numPages){\r\n            console.log(\"Setting page to \" + page);\r\n            setCurrentPage(page);\r\n        } else {\r\n            console.log(\"Not setting page because page is out of range: \" + page);\r\n        }\r\n    }\r\n\r\n    function paginationClicked(event) {\r\n        var itemClicked = parseInt(event.target.text);\r\n        console.log(\"itemClicked: \" + itemClicked);\r\n        //var itemClicked = event.target.dataset.key;\r\n        setPage(itemClicked);\r\n      }\r\n\r\n    console.log(\"Current page: \" + currentPage);\r\n\r\n    let paginationItems = [];\r\n    for (let number = 1; number <= numPages; number++) {\r\n        paginationItems.push(\r\n            <Pagination.Item key={number} active={number === currentPage} onClick={(event) => paginationClicked(event)}>\r\n                {number}\r\n            </Pagination.Item>,\r\n        );\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <Pagination>\r\n                    <Pagination.First onClick={() => setPage(1)} disabled={(currentPage == 1)}/>\r\n                    <Pagination.Prev onClick={() => setPage(currentPage - 1)} disabled={currentPage == 1}/>\r\n                    {paginationItems}\r\n                    <Pagination.Next onClick={() => setPage(currentPage + 1)} disabled={currentPage == numPages}/>\r\n                    <Pagination.Last onClick={() => setPage(numPages)} disabled={currentPage == numPages}/>\r\n                </Pagination>\r\n                {/* This creates a 2 column layout on an xs screen and a 5 column layout on a medium or larger screen.  Alternatively, we could use directives on the Col that set the number of columns to occupy in a 12 column system:  xs={6} md={2} */}\r\n                <Row xs={2} md={5}>\r\n                    {flights.map((flight) =>\r\n                        <Col className=\"mb-3\" key={flight.id}>\r\n                            <FlightDetail flight={flight} fields={fields} showFlight={ShowFlight} />\r\n                        </Col>\r\n                    )}\r\n                </Row>\r\n            </Container>\r\n            <FlightModal show={show} flight={modalFlight} fields={fields} handleClose={handleClose} />\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default FlightsSimpleV2;"],"names":["FlightMethods","imageBaseUrl","formatTime","value","timeFormat","result","moment","getLookup","flight","fields","field","valueType","language","dailyValue","getDailyValue","key","_a","_c","_b","getCodeshareField","_d","getFormattedFlight","FlightMethods$1","FlightDetail","showFlight","formattedFlight","jsx","Card","jsxs","Stack","FlightModal","show","handleClose","dailiesBaseUrl","updateFlight","id","dailyValues","url","response","data","toast","error","getLinecodeNumber","setField","name","updatedFields","handleSubmit","event","Modal","Form","Button","baseApiUrl","rollOn","rollOff","FlightsSimpleV2","setShow","useState","modalFlight","setModalFlight","currentPage","setCurrentPage","flights","setFlights","itemsPerPage","numPages","getRecords","useEffect","ShowFlight","setPage","page","paginationClicked","itemClicked","paginationItems","number","Pagination","Fragment","Container","Row","Col"],"mappings":"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"}