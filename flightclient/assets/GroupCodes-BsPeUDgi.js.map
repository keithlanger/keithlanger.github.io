{"version":3,"file":"GroupCodes-BsPeUDgi.js","sources":["../../src/components/GroupCodes.js"],"sourcesContent":["import React, { useEffect, useState, useMemo } from \"react\";\r\nimport Pagination from \"react-bootstrap/Pagination\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst GROUP_CODE_FIELDS = [\r\n  { key: \"id\", label: \"ID\" },\r\n  { key: \"lineCode\", label: \"Line Code\" },\r\n  { key: \"line\", label: \"Line\" },\r\n  { key: \"firstNumber\", label: \"First Number\" },\r\n  { key: \"lastNumber\", label: \"Last Number\" },\r\n  { key: \"opsCode\", label: \"Ops Code\" },\r\n  { key: \"inlineLogo\", label: \"Inline Logo\" },\r\n  { key: \"bulletLogo\", label: \"Bullet Logo\" },\r\n  { key: \"backLogo\", label: \"Back Logo\" },\r\n  { key: \"gateLogo\", label: \"Gate Logo\" },\r\n  { key: \"groupCode\", label: \"Group Code\" },\r\n  { key: \"defaultLanguage\", label: \"Default Language\" },\r\n  { key: \"siteId\", label: \"Site ID\" },\r\n];\r\n\r\nfunction compare(a, b, key, direction) {\r\n  if (a[key] == null && b[key] == null) return 0;\r\n  if (a[key] == null) return 1;\r\n  if (b[key] == null) return -1;\r\n  if (typeof a[key] === \"string\") {\r\n    return direction === \"asc\"\r\n      ? a[key].localeCompare(b[key])\r\n      : b[key].localeCompare(a[key]);\r\n  }\r\n  return direction === \"asc\" ? a[key] - b[key] : b[key] - a[key];\r\n}\r\n\r\nconst GroupCodeCard = ({ group, onSave }) => {\r\n  const [show, setShow] = useState(false);\r\n  return (\r\n    <>\r\n      <Card\r\n        className=\"mb-3 shadow-sm group-card-mini text-truncate\"\r\n        style={{ cursor: \"pointer\", minWidth: 0, maxWidth: 260, width: \"100%\" }}\r\n        onClick={() => setShow(true)}\r\n      >\r\n        <Card.Body className=\"p-2 d-flex flex-column align-items-start justify-content-between\">\r\n          <div className=\"mb-1 text-truncate\" style={{ width: \"100%\" }}><strong>ID:</strong> {group.id}</div>\r\n          <div className=\"mb-1 text-truncate\" style={{ width: \"100%\" }}><strong>Code:</strong> {group.groupCode}</div>\r\n          <div className=\"mb-2 text-truncate\" style={{ width: \"100%\", fontSize: \"0.85em\", color: \"#888\" }}><strong>Line:</strong> {group.line}</div>\r\n          <Button variant=\"outline-primary\" size=\"sm\" className=\"align-self-end\" onClick={e => { e.stopPropagation(); setShow(true); }}>Details</Button>\r\n        </Card.Body>\r\n      </Card>\r\n      <GroupCodeDetailsModal show={show} onHide={() => setShow(false)} group={group} onSave={onSave} />\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nfunction GroupCodeDetailsModal({ show, onHide, group, onSave, mode = \"edit\" }) {\r\n  const [form, setForm] = useState(group || {});\r\n  const [saving, setSaving] = useState(false);\r\n  const [validationError, setValidationError] = useState(\"\");\r\n  const { authenticatedFetch } = useAuth();\r\n\r\n  useEffect(() => {\r\n    if (mode === \"add\") {\r\n      // Reset form for add mode, set defaults for new group code\r\n      setForm({\r\n        id: 0,\r\n        siteId: 1,\r\n        firstNumber: 1,\r\n        lastNumber: 9999,\r\n        defaultLanguage: \"en\"\r\n      });\r\n    } else {\r\n      setForm(group || {});\r\n    }\r\n    setValidationError(\"\");\r\n  }, [group, show, mode]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setForm((f) => ({\r\n      ...f,\r\n      [name]: type === \"checkbox\" ? checked : value,\r\n    }));\r\n    setValidationError(\"\");\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    // Validate required fields\r\n    if (!form.lineCode || !form.line || !form.groupCode || form.firstNumber === undefined || form.firstNumber === \"\" || form.lastNumber === undefined || form.lastNumber === \"\") {\r\n      setValidationError(\"Line Code, Line, Group Code, First Number, and Last Number are required.\");\r\n      return;\r\n    }\r\n    // Validate firstNumber and lastNumber are numbers between 1 and 9999\r\n    const firstNum = Number(form.firstNumber);\r\n    const lastNum = Number(form.lastNumber);\r\n    if (\r\n      isNaN(firstNum) || isNaN(lastNum) ||\r\n      firstNum < 1 || firstNum > 9999 ||\r\n      lastNum < 1 || lastNum > 9999\r\n    ) {\r\n      setValidationError(\"First Number and Last Number must be numbers between 1 and 9999.\");\r\n      return;\r\n    }\r\n    if (firstNum > lastNum) {\r\n      setValidationError(\"First Number must be less than or equal to Last Number.\");\r\n      return;\r\n    }\r\n    setSaving(true);\r\n    try {\r\n      const baseUrl = import.meta.env.VITE_API_BASE_URL || \"\";\r\n      let resp, updated;\r\n      if (mode === \"add\") {\r\n        // POST to create new group code\r\n        resp = await authenticatedFetch(`${baseUrl}/api/GroupCodes`, {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(form),\r\n        });\r\n        if (!resp.ok) {\r\n          let errorMsg = \"Failed to create group code\";\r\n          try {\r\n            const data = await resp.json();\r\n            if (data && (data.error || data.message)) {\r\n              errorMsg = data.error || data.message;\r\n            }\r\n          } catch {}\r\n          throw new Error(errorMsg);\r\n        }\r\n        updated = await resp.json();\r\n        toast.success(\"Group code created\");\r\n      } else {\r\n        // PUT to update existing group code\r\n        resp = await authenticatedFetch(`${baseUrl}/api/GroupCodes/${form.id}`, {\r\n          method: \"PUT\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(form),\r\n        });\r\n        if (!resp.ok) {\r\n          let errorMsg = \"Failed to save group code\";\r\n          try {\r\n            const data = await resp.json();\r\n            if (data && (data.error || data.message)) {\r\n              errorMsg = data.error || data.message;\r\n            }\r\n          } catch {}\r\n          throw new Error(errorMsg);\r\n        }\r\n        updated = await resp.json();\r\n        toast.success(\"Group code updated\");\r\n      }\r\n      onSave(updated, mode);\r\n      onHide();\r\n    } catch (e) {\r\n      toast.error(e.message || (mode === \"add\" ? \"Error creating group code\" : \"Error saving group code\"));\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  // Split fields for two-column layout: fill left column first, then right, preserving order\r\n  const mid = Math.ceil(GROUP_CODE_FIELDS.length / 2);\r\n  const leftFields = GROUP_CODE_FIELDS.slice(0, mid);\r\n  const rightFields = GROUP_CODE_FIELDS.slice(mid);\r\n\r\n  // Determine which required fields are missing/invalid for red border\r\n  const showFieldError = (key) => {\r\n    if (!validationError) return false;\r\n    if (key === \"lineCode\" && (!form.lineCode || form.lineCode === \"\")) return true;\r\n    if (key === \"line\" && (!form.line || form.line === \"\")) return true;\r\n    if (key === \"groupCode\" && (!form.groupCode || form.groupCode === \"\")) return true;\r\n    if (key === \"firstNumber\") {\r\n      const v = Number(form.firstNumber);\r\n      return (\r\n        form.firstNumber === undefined || form.firstNumber === \"\" || isNaN(v) || v < 1 || v > 9999 || (form.lastNumber !== undefined && form.lastNumber !== \"\" && v > Number(form.lastNumber))\r\n      );\r\n    }\r\n    if (key === \"lastNumber\") {\r\n      const v = Number(form.lastNumber);\r\n      return (\r\n        form.lastNumber === undefined || form.lastNumber === \"\" || isNaN(v) || v < 1 || v > 9999 || (form.firstNumber !== undefined && form.firstNumber !== \"\" && Number(form.firstNumber) > v)\r\n      );\r\n    }\r\n    return false;\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} onHide={onHide} size=\"lg\" centered contentClassName=\"group-modal-responsive\">\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{mode === \"add\" ? \"Add Group Code\" : \"Group Code Details\"}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body style={{ maxHeight: '60vh', overflowY: 'auto', minHeight: 200 }}>\r\n        {validationError && (\r\n          <div className=\"alert alert-danger py-2 mb-3\" role=\"alert\" style={{ fontSize: '0.95em' }}>\r\n            {validationError}\r\n          </div>\r\n        )}\r\n        <Form>\r\n          <Row>\r\n            <Col xs={12} lg={6}>\r\n              {leftFields.map(({ key, label }) => (\r\n                <Form.Group key={key} className=\"mb-3\" as={Row}>\r\n                  <Form.Label column sm={4} xs={5} style={{ fontWeight: 500 }}>{label}</Form.Label>\r\n                  <Col sm={8} xs={7}>\r\n                    <Form.Control\r\n                      name={key}\r\n                      value={form[key] ?? \"\"}\r\n                      onChange={handleChange}\r\n                      disabled={saving || key === \"id\" || key === \"siteId\"}\r\n                      readOnly={key === \"id\" || key === \"siteId\"}\r\n                      type={typeof form[key] === \"number\" ? \"number\" : \"text\"}\r\n                      tabIndex={key === \"siteId\" ? -1 : undefined}\r\n                      isInvalid={showFieldError(key)}\r\n                    />\r\n                  </Col>\r\n                </Form.Group>\r\n              ))}\r\n            </Col>\r\n            <Col xs={12} lg={6}>\r\n              {rightFields.map(({ key, label }) => (\r\n                <Form.Group key={key} className=\"mb-3\" as={Row}>\r\n                  <Form.Label column sm={4} xs={5} style={{ fontWeight: 500 }}>{label}</Form.Label>\r\n                  <Col sm={8} xs={7}>\r\n                    <Form.Control\r\n                      name={key}\r\n                      value={form[key] ?? \"\"}\r\n                      onChange={handleChange}\r\n                      disabled={saving || key === \"id\" || key === \"siteId\"}\r\n                      readOnly={key === \"id\" || key === \"siteId\"}\r\n                      type={typeof form[key] === \"number\" ? \"number\" : \"text\"}\r\n                      tabIndex={key === \"siteId\" ? -1 : undefined}\r\n                      isInvalid={showFieldError(key)}\r\n                    />\r\n                  </Col>\r\n                </Form.Group>\r\n              ))}\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"primary\" onClick={handleSave} disabled={saving}>\r\n          {saving ? <Spinner size=\"sm\" animation=\"border\" /> : (mode === \"add\" ? \"Create\" : \"Save\")}\r\n        </Button>\r\n        <Button variant=\"secondary\" onClick={onHide} disabled={saving}>Cancel</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nconst GroupCodesScreen = () => {\r\n  const { user, authenticatedFetch } = useAuth();\r\n  const [groups, setGroups] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [sort, setSort] = useState({ key: \"id\", direction: \"asc\" });\r\n  // Filtering removed\r\n  const [page, setPage] = useState(1);\r\n  const [pageSize, setPageSize] = useState(20);\r\n  const [totalCount, setTotalCount] = useState(0);\r\n  const [showAdd, setShowAdd] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    const baseUrl = import.meta.env.VITE_API_BASE_URL || \"\";\r\n    const params = new URLSearchParams();\r\n    params.append(\"skip\", (page - 1) * pageSize);\r\n    params.append(\"top\", pageSize);\r\n    authenticatedFetch(`${baseUrl}/api/GroupCodes?${params.toString()}`)\r\n      .then(async (r) => {\r\n        if (!r.ok) throw new Error(\"Failed to fetch group codes\");\r\n        const total = r.headers.get(\"x-total-items\");\r\n        const data = await r.json();\r\n        setGroups(Array.isArray(data) ? data : (data.data || []));\r\n        setTotalCount(total ? parseInt(total, 10) : (Array.isArray(data) ? data.length : (data.totalCount || (data.data ? data.data.length : 0))));\r\n      })\r\n      .catch((e) => toast.error(e.message || \"Error loading group codes\"))\r\n      .finally(() => setLoading(false));\r\n  }, [authenticatedFetch, page, pageSize]);\r\n\r\n  // No client-side filtering/sorting; server handles it\r\n  const sorted = groups;\r\n  const totalPages = Math.max(1, Math.ceil((totalCount || groups.length) / pageSize));\r\n  const paged = sorted;\r\n\r\n  useEffect(() => {\r\n    // Reset to first page if sort or pageSize changes\r\n    setPage(1);\r\n  }, [sort, pageSize]);\r\n\r\n  const handleSave = (updated, mode) => {\r\n    if (mode === \"add\") {\r\n      // Add new group code to the list and refresh\r\n      setGroups((gs) => [updated, ...gs]);\r\n      setTotalCount((c) => c + 1);\r\n    } else {\r\n      setGroups((gs) => gs.map((g) => (g.id === updated.id ? updated : g)));\r\n    }\r\n  };\r\n\r\n  if (!user || !(user.roles?.includes(\"admin\"))) {\r\n    return <div className=\"mt-4 text-danger\">Access denied.</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n        <h2 className=\"mb-0\">Group Codes</h2>\r\n        <Button variant=\"success\" onClick={() => setShowAdd(true)}>\r\n          + Add Group Code\r\n        </Button>\r\n      </div>\r\n\r\n      <GroupCodeDetailsModal\r\n        show={showAdd}\r\n        onHide={() => setShowAdd(false)}\r\n        mode=\"add\"\r\n        onSave={handleSave}\r\n      />\r\n\r\n      {loading ? (\r\n        <div className=\"text-center my-5\">\r\n          <Spinner animation=\"border\" />\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <Row className=\"g-2\">\r\n            {paged.map((group) => (\r\n              <Col key={group.id} xs={12} sm={6} md={4} lg={3} xl={2} xxl={2}>\r\n                <GroupCodeCard group={group} onSave={handleSave} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          {groups.length > 0 && (\r\n            <div className=\"d-flex justify-content-center align-items-center gap-3 mt-3 flex-wrap\">\r\n              <Pagination className=\"mb-0\">\r\n                <Pagination.First onClick={() => setPage(1)} disabled={page === 1} />\r\n                <Pagination.Prev onClick={() => setPage(p => Math.max(1, p - 1))} disabled={page === 1} />\r\n                {/* Show first page */}\r\n                <Pagination.Item active={page === 1} onClick={() => setPage(1)}>{1}</Pagination.Item>\r\n                {/* Show ellipsis if needed before current page */}\r\n                {page > 4 && <Pagination.Ellipsis disabled />} \r\n                {/* Show up to 2 pages before current */}\r\n                {Array.from({length: 2}, (_, i) => page - 2 + i).filter(p => p > 1 && p < page).map(p => (\r\n                  <Pagination.Item key={p} onClick={() => setPage(p)}>{p}</Pagination.Item>\r\n                ))}\r\n                {/* Show current page if not first/last */}\r\n                {page !== 1 && page !== totalPages && (\r\n                  <Pagination.Item active>{page}</Pagination.Item>\r\n                )}\r\n                {/* Show up to 2 pages after current */}\r\n                {Array.from({length: 2}, (_, i) => page + 1 + i).filter(p => p < totalPages && p > page).map(p => (\r\n                  <Pagination.Item key={p} onClick={() => setPage(p)}>{p}</Pagination.Item>\r\n                ))}\r\n                {/* Show ellipsis if needed after current page */}\r\n                {page < totalPages - 3 && <Pagination.Ellipsis disabled />}\r\n                {/* Show last page if more than one */}\r\n                {totalPages > 1 && (\r\n                  <Pagination.Item active={page === totalPages} onClick={() => setPage(totalPages)}>{totalPages}</Pagination.Item>\r\n                )}\r\n                <Pagination.Next onClick={() => setPage(p => Math.min(totalPages, p + 1))} disabled={page === totalPages} />\r\n                <Pagination.Last onClick={() => setPage(totalPages)} disabled={page === totalPages} />\r\n              </Pagination>\r\n              <Form.Group controlId=\"pageSizeSelect\" className=\"mb-0\">\r\n                <Form.Label visuallyHidden>Items per page</Form.Label>\r\n                <Form.Select size=\"sm\" value={pageSize} onChange={e => setPageSize(Number(e.target.value))}>\r\n                  {[10, 20, 30, 50, 100].map(size => (\r\n                    <option key={size} value={size}>{size} per page</option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n      {sorted.length === 0 && !loading && <div>No group codes found.</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupCodesScreen;\r\n"],"names":["GROUP_CODE_FIELDS","GroupCodeCard","group","onSave","show","setShow","useState","jsxs","Fragment","jsx","Card","Button","e","GroupCodeDetailsModal","onHide","mode","form","setForm","saving","setSaving","validationError","setValidationError","authenticatedFetch","useAuth","useEffect","handleChange","name","value","type","checked","f","handleSave","firstNum","lastNum","baseUrl","resp","updated","errorMsg","data","toast","mid","leftFields","rightFields","showFieldError","key","v","Modal","Form","Row","Col","label","Spinner","GroupCodesScreen","user","groups","setGroups","loading","setLoading","sort","setSort","page","setPage","pageSize","setPageSize","totalCount","setTotalCount","showAdd","setShowAdd","params","r","total","sorted","totalPages","paged","gs","c","g","_a","Pagination","p","_","i","size"],"mappings":"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"}